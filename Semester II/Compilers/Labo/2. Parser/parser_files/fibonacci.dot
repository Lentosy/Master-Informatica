graph {
node [shape=record];
Compound1 [color="red", label="{Compound}", ];
Func2 [color="green", label="{Func|{<name>'fib'}}", ];
Compound3 [color="red", label="{Compound}", ];
Var4 [color="green", label="{Var|{<name>'first'|<type>i32|<init>init?}}", ];
IntLiteral5 [color="blue", label="{IntLiteral|{<value>0}}", ];
Var4:init -- IntLiteral5 [];
Compound3 -- Var4 [];
Var6 [color="green", label="{Var|{<name>'second'|<type>i32|<init>init?}}", ];
IntLiteral7 [color="blue", label="{IntLiteral|{<value>1}}", ];
Var6:init -- IntLiteral7 [];
Compound3 -- Var6 [];
Var8 [color="green", label="{Var|{<name>'next'|<type>i32|<init>init?}}", ];
Compound3 -- Var8 [];
For9 [color="red", label="{For|{<init>init|<cond>cond|<inc>inc|<body>body}}", ];
Var10 [color="green", label="{Var|{<name>'c'|<type>i32|<init>init?}}", ];
IntLiteral11 [color="blue", label="{IntLiteral|{<value>0}}", ];
Var10:init -- IntLiteral11 [];
For9:init -- Var10 [];
BinaryOp12 [color="blue", label="{BinaryOp|{<left>left|<op>CLT|<right>right}}", ];
DeclRef13 [color="blue", label="{DeclRef|{<decl>'c'|<index>index?}}", ];
BinaryOp12:left -- DeclRef13 [];
DeclRef14 [color="blue", label="{DeclRef|{<decl>'n'|<index>index?}}", ];
BinaryOp12:right -- DeclRef14 [];
For9:cond -- BinaryOp12 [];
Assignment15 [color="blue", label="{Assignment|{<left>left|<right>right}}", ];
DeclRef16 [color="blue", label="{DeclRef|{<decl>'c'|<index>index?}}", ];
Assignment15:left -- DeclRef16 [];
BinaryOp17 [color="blue", label="{BinaryOp|{<left>left|<op>PLUS|<right>right}}", ];
DeclRef18 [color="blue", label="{DeclRef|{<decl>'c'|<index>index?}}", ];
BinaryOp17:left -- DeclRef18 [];
IntLiteral19 [color="blue", label="{IntLiteral|{<value>1}}", ];
BinaryOp17:right -- IntLiteral19 [];
Assignment15:right -- BinaryOp17 [];
For9:inc -- Assignment15 [];
Compound20 [color="red", label="{Compound}", ];
If21 [color="red", label="{If|{<cond>cond|<then>then|<else>else?}}", ];
BinaryOp22 [color="blue", label="{BinaryOp|{<left>left|<op>CLE|<right>right}}", ];
DeclRef23 [color="blue", label="{DeclRef|{<decl>'c'|<index>index?}}", ];
BinaryOp22:left -- DeclRef23 [];
IntLiteral24 [color="blue", label="{IntLiteral|{<value>1}}", ];
BinaryOp22:right -- IntLiteral24 [];
If21:cond -- BinaryOp22 [];
Compound25 [color="red", label="{Compound}", ];
Assignment26 [color="blue", label="{Assignment|{<left>left|<right>right}}", ];
DeclRef27 [color="blue", label="{DeclRef|{<decl>'next'|<index>index?}}", ];
Assignment26:left -- DeclRef27 [];
DeclRef28 [color="blue", label="{DeclRef|{<decl>'c'|<index>index?}}", ];
Assignment26:right -- DeclRef28 [];
Compound25 -- Assignment26 [];
If21:then -- Compound25 [];
Compound29 [color="red", label="{Compound}", ];
Assignment30 [color="blue", label="{Assignment|{<left>left|<right>right}}", ];
DeclRef31 [color="blue", label="{DeclRef|{<decl>'next'|<index>index?}}", ];
Assignment30:left -- DeclRef31 [];
BinaryOp32 [color="blue", label="{BinaryOp|{<left>left|<op>PLUS|<right>right}}", ];
DeclRef33 [color="blue", label="{DeclRef|{<decl>'first'|<index>index?}}", ];
BinaryOp32:left -- DeclRef33 [];
DeclRef34 [color="blue", label="{DeclRef|{<decl>'second'|<index>index?}}", ];
BinaryOp32:right -- DeclRef34 [];
Assignment30:right -- BinaryOp32 [];
Compound29 -- Assignment30 [];
Assignment35 [color="blue", label="{Assignment|{<left>left|<right>right}}", ];
DeclRef36 [color="blue", label="{DeclRef|{<decl>'first'|<index>index?}}", ];
Assignment35:left -- DeclRef36 [];
DeclRef37 [color="blue", label="{DeclRef|{<decl>'second'|<index>index?}}", ];
Assignment35:right -- DeclRef37 [];
Compound29 -- Assignment35 [];
Assignment38 [color="blue", label="{Assignment|{<left>left|<right>right}}", ];
DeclRef39 [color="blue", label="{DeclRef|{<decl>'second'|<index>index?}}", ];
Assignment38:left -- DeclRef39 [];
DeclRef40 [color="blue", label="{DeclRef|{<decl>'next'|<index>index?}}", ];
Assignment38:right -- DeclRef40 [];
Compound29 -- Assignment38 [];
If21:else -- Compound29 [];
Compound20 -- If21 [];
For9:body -- Compound20 [];
Compound3 -- For9 [];
Return41 [color="red", label="{Return}", ];
DeclRef42 [color="blue", label="{DeclRef|{<decl>'next'|<index>index?}}", ];
Return41 -- DeclRef42 [];
Compound3 -- Return41 [];
Func2 -- Compound3 [];
Compound1 -- Func2 [];
Var43 [color="green", label="{Var|{<name>'limit'|<type>i32|<init>init?}}", ];
Call44 [color="blue", label="{Call|{<name>'read'}}", ];
Var43:init -- Call44 [];
Compound1 -- Var43 [];
Call45 [color="blue", label="{Call|{<name>'echo'}}", ];
Call46 [color="blue", label="{Call|{<name>'fib'}}", ];
DeclRef47 [color="blue", label="{DeclRef|{<decl>'limit'|<index>index?}}", ];
Call46 -- DeclRef47 [];
Call45 -- Call46 [];
Compound1 -- Call45 [];
}
