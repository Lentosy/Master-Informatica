graph {
node [shape=record];
Compound1 [color="red", label="{Compound}", ];
If2 [color="red", label="{If|{<cond>cond|<then>then|<else>else?}}", ];
BinaryOp3 [color="blue", label="{BinaryOp|{<left>left|<op>CEQ|<right>right}}", ];
DeclRef4 [color="blue", label="{DeclRef|{<decl>'x'|<index>index?}}", ];
BinaryOp3:left -- DeclRef4 [];
IntLiteral5 [color="blue", label="{IntLiteral|{<value>5}}", ];
BinaryOp3:right -- IntLiteral5 [];
If2:cond -- BinaryOp3 [];
Compound6 [color="red", label="{Compound}", ];
If2:then -- Compound6 [];
Compound7 [color="red", label="{Compound}", ];
Call8 [color="blue", label="{Call|{<name>'print'}}", ];
Call9 [color="blue", label="{Call|{<name>'funct'}}", ];
DeclRef10 [color="blue", label="{DeclRef|{<decl>'parameter'|<index>index?}}", ];
Call9 -- DeclRef10 [];
Call8 -- Call9 [];
Compound7 -- Call8 [];
If2:else -- Compound7 [];
Compound1 -- If2 [];
If11 [color="red", label="{If|{<cond>cond|<then>then|<else>else?}}", ];
BinaryOp12 [color="blue", label="{BinaryOp|{<left>left|<op>CEQ|<right>right}}", ];
DeclRef13 [color="blue", label="{DeclRef|{<decl>'y'|<index>index?}}", ];
BinaryOp12:left -- DeclRef13 [];
StringLiteral14 [color="blue", label="{StringLiteral|{<value>'een string met spaties en een underscore _'}}", ];
BinaryOp12:right -- StringLiteral14 [];
If11:cond -- BinaryOp12 [];
Compound15 [color="red", label="{Compound}", ];
Var16 [color="green", label="{Var|{<name>'top'|<type>i32|<init>init?}}", ];
IntLiteral17 [color="blue", label="{IntLiteral|{<value>100}}", ];
Var16:init -- IntLiteral17 [];
Compound15 -- Var16 [];
For18 [color="red", label="{For|{<init>init|<cond>cond|<inc>inc|<body>body}}", ];
Var19 [color="green", label="{Var|{<name>'i'|<type>i32|<init>init?}}", ];
IntLiteral20 [color="blue", label="{IntLiteral|{<value>1}}", ];
Var19:init -- IntLiteral20 [];
For18:init -- Var19 [];
BinaryOp21 [color="blue", label="{BinaryOp|{<left>left|<op>CLT|<right>right}}", ];
DeclRef22 [color="blue", label="{DeclRef|{<decl>'i'|<index>index?}}", ];
BinaryOp21:left -- DeclRef22 [];
DeclRef23 [color="blue", label="{DeclRef|{<decl>'top'|<index>index?}}", ];
BinaryOp21:right -- DeclRef23 [];
For18:cond -- BinaryOp21 [];
Assignment24 [color="blue", label="{Assignment|{<left>left|<right>right}}", ];
DeclRef25 [color="blue", label="{DeclRef|{<decl>'i'|<index>index?}}", ];
Assignment24:left -- DeclRef25 [];
BinaryOp26 [color="blue", label="{BinaryOp|{<left>left|<op>PLUS|<right>right}}", ];
DeclRef27 [color="blue", label="{DeclRef|{<decl>'i'|<index>index?}}", ];
BinaryOp26:left -- DeclRef27 [];
IntLiteral28 [color="blue", label="{IntLiteral|{<value>1}}", ];
BinaryOp26:right -- IntLiteral28 [];
Assignment24:right -- BinaryOp26 [];
For18:inc -- Assignment24 [];
Compound29 [color="red", label="{Compound}", ];
Call30 [color="blue", label="{Call|{<name>'print'}}", ];
DeclRef31 [color="blue", label="{DeclRef|{<decl>'i'|<index>index?}}", ];
Call30 -- DeclRef31 [];
Compound29 -- Call30 [];
For18:body -- Compound29 [];
Compound15 -- For18 [];
If11:then -- Compound15 [];
Compound1 -- If11 [];
While32 [color="red", label="{While|{<cond>cond|<body>body}}", ];
BinaryOp33 [color="blue", label="{BinaryOp|{<left>left|<op>CLT|<right>right}}", ];
BinaryOp34 [color="blue", label="{BinaryOp|{<left>left|<op>MINUS|<right>right}}", ];
DeclRef35 [color="blue", label="{DeclRef|{<decl>'z'|<index>index?}}", ];
BinaryOp34:left -- DeclRef35 [];
IntLiteral36 [color="blue", label="{IntLiteral|{<value>4}}", ];
BinaryOp34:right -- IntLiteral36 [];
BinaryOp33:left -- BinaryOp34 [];
BinaryOp37 [color="blue", label="{BinaryOp|{<left>left|<op>PLUS|<right>right}}", ];
IntLiteral38 [color="blue", label="{IntLiteral|{<value>9}}", ];
BinaryOp37:left -- IntLiteral38 [];
IntLiteral39 [color="blue", label="{IntLiteral|{<value>7}}", ];
BinaryOp37:right -- IntLiteral39 [];
BinaryOp33:right -- BinaryOp37 [];
While32:cond -- BinaryOp33 [];
Compound40 [color="red", label="{Compound}", ];
Call41 [color="blue", label="{Call|{<name>'func'}}", ];
Call42 [color="blue", label="{Call|{<name>'func'}}", ];
Call43 [color="blue", label="{Call|{<name>'func'}}", ];
DeclRef44 [color="blue", label="{DeclRef|{<decl>'z'|<index>index?}}", ];
Call43 -- DeclRef44 [];
Call42 -- Call43 [];
Call41 -- Call42 [];
Compound40 -- Call41 [];
While32:body -- Compound40 [];
Compound1 -- While32 [];
Func45 [color="green", label="{Func|{<name>'functie'}}", ];
Compound46 [color="red", label="{Compound}", ];
Return47 [color="red", label="{Return}", ];
DeclRef48 [color="blue", label="{DeclRef|{<decl>'x'|<index>index?}}", ];
Return47 -- DeclRef48 [];
Compound46 -- Return47 [];
Func45 -- Compound46 [];
Compound1 -- Func45 [];
Func49 [color="green", label="{Func|{<name>'functie2'}}", ];
Compound50 [color="red", label="{Compound}", ];
Return51 [color="red", label="{Return}", ];
Compound50 -- Return51 [];
Func49 -- Compound50 [];
Compound1 -- Func49 [];
}
