digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x560038a42190 [shape=record,label="{entry:\l  %iterations = alloca i32, !dbg !8\l  store i32 1024, i32* %iterations, !dbg !8\l  %n = alloca i32, !dbg !9\l  store i32 512, i32* %n, !dbg !9\l  %numbers = alloca [512 x i32], !dbg !10\l  %seed = alloca i32, !dbg !11\l  store i32 1, i32* %seed, !dbg !11\l  %i = alloca i32, !dbg !12\l  %j = alloca i32, !dbg !13\l  %a = alloca i32, !dbg !14\l  %b = alloca i32, !dbg !15\l  %switches = alloca i32, !dbg !16\l  %rand = alloca i32, !dbg !17\l  br label %for.init, !dbg !18\l}"];
	Node0x560038a42190 -> Node0x560038a447f0;
	Node0x560038a447f0 [shape=record,label="{for.init:                                         \l  store i32 0, i32* %i, !dbg !19\l  br label %for.cond, !dbg !19\l}"];
	Node0x560038a447f0 -> Node0x560038a44c10;
	Node0x560038a44c10 [shape=record,label="{for.cond:                                         \l  %0 = load i32, i32* %i, !dbg !20\l  %1 = load i32, i32* %iterations, !dbg !21\l  %2 = icmp slt i32 %0, %1, !dbg !20\l  br i1 %2, label %for.body, label %for.end, !dbg !20\l|{<s0>T|<s1>F}}"];
	Node0x560038a44c10:s0 -> Node0x560038a45e50;
	Node0x560038a44c10:s1 -> Node0x560038a45f30;
	Node0x560038a45e50 [shape=record,label="{for.body:                                         \l  br label %for.init1, !dbg !22\l}"];
	Node0x560038a45e50 -> Node0x560038a46070;
	Node0x560038a46260 [shape=record,label="{for.inc:                                          \l  %3 = load i32, i32* %i, !dbg !23\l  %4 = add i32 %3, 1, !dbg !23\l  store i32 %4, i32* %i, !dbg !24\l  br label %for.cond, !dbg !24\l}"];
	Node0x560038a46260 -> Node0x560038a44c10;
	Node0x560038a45f30 [shape=record,label="{for.end:                                          \l  %sorted = alloca i32, !dbg !25\l  store i32 1, i32* %sorted, !dbg !25\l  br label %for.init11, !dbg !26\l}"];
	Node0x560038a45f30 -> Node0x560038a47b30;
	Node0x560038a46070 [shape=record,label="{for.init1:                                        \l  store i32 0, i32* %j, !dbg !27\l  br label %for.cond2, !dbg !27\l}"];
	Node0x560038a46070 -> Node0x560038a47f20;
	Node0x560038a47f20 [shape=record,label="{for.cond2:                                        \l  %5 = load i32, i32* %j, !dbg !28\l  %6 = load i32, i32* %n, !dbg !29\l  %7 = icmp slt i32 %5, %6, !dbg !28\l  br i1 %7, label %for.body3, label %for.end5, !dbg !28\l|{<s0>T|<s1>F}}"];
	Node0x560038a47f20:s0 -> Node0x560038a48f50;
	Node0x560038a47f20:s1 -> Node0x560038a49030;
	Node0x560038a48f50 [shape=record,label="{for.body3:                                        \l  %8 = load i32, i32* %seed, !dbg !30\l  %9 = mul i32 %8, 1103515245, !dbg !30\l  %10 = add i32 %9, 12345, !dbg !30\l  store i32 %10, i32* %seed, !dbg !31\l  %11 = load i32, i32* %seed, !dbg !32\l  %12 = sdiv i32 %11, 65536, !dbg !32\l  %13 = srem i32 %12, 32768, !dbg !33\l  store i32 %13, i32* %rand, !dbg !34\l  %14 = load i32, i32* %j, !dbg !35\l  %15 = getelementptr [512 x i32], [512 x i32]* %numbers, i32 0, i32 %14, !dbg\l... !35\l  %16 = load i32, i32* %rand, !dbg !36\l  store i32 %16, i32* %15, !dbg !37\l  br label %for.inc4, !dbg !37\l}"];
	Node0x560038a48f50 -> Node0x560038a46ae0;
	Node0x560038a46ae0 [shape=record,label="{for.inc4:                                         \l  %17 = load i32, i32* %j, !dbg !38\l  %18 = add i32 %17, 1, !dbg !38\l  store i32 %18, i32* %j, !dbg !39\l  br label %for.cond2, !dbg !39\l}"];
	Node0x560038a46ae0 -> Node0x560038a47f20;
	Node0x560038a49030 [shape=record,label="{for.end5:                                         \l  store i32 1, i32* %switches, !dbg !40\l  br label %while.cond, !dbg !41\l}"];
	Node0x560038a49030 -> Node0x560038a4cb90;
	Node0x560038a4cb90 [shape=record,label="{while.cond:                                       \l  %19 = load i32, i32* %switches, !dbg !42\l  %20 = icmp sgt i32 %19, 0, !dbg !42\l  br i1 %20, label %while.body, label %while.end, !dbg !42\l|{<s0>T|<s1>F}}"];
	Node0x560038a4cb90:s0 -> Node0x560038a4d550;
	Node0x560038a4cb90:s1 -> Node0x560038a4d950;
	Node0x560038a4d550 [shape=record,label="{while.body:                                       \l  store i32 0, i32* %switches, !dbg !43\l  br label %for.init6, !dbg !44\l}"];
	Node0x560038a4d550 -> Node0x560038a4dc70;
	Node0x560038a4d950 [shape=record,label="{while.end:                                        \l  br label %for.inc, !dbg !45\l}"];
	Node0x560038a4d950 -> Node0x560038a46260;
	Node0x560038a4dc70 [shape=record,label="{for.init6:                                        \l  store i32 0, i32* %j, !dbg !46\l  br label %for.cond7, !dbg !46\l}"];
	Node0x560038a4dc70 -> Node0x560038a4e160;
	Node0x560038a4e160 [shape=record,label="{for.cond7:                                        \l  %21 = load i32, i32* %j, !dbg !47\l  %22 = load i32, i32* %n, !dbg !48\l  %23 = sub i32 %22, 1, !dbg !48\l  %24 = icmp slt i32 %21, %23, !dbg !47\l  br i1 %24, label %for.body8, label %for.end10, !dbg !47\l|{<s0>T|<s1>F}}"];
	Node0x560038a4e160:s0 -> Node0x560038a4f810;
	Node0x560038a4e160:s1 -> Node0x560038a4f8f0;
	Node0x560038a4f810 [shape=record,label="{for.body8:                                        \l  %25 = load i32, i32* %j, !dbg !49\l  %26 = getelementptr [512 x i32], [512 x i32]* %numbers, i32 0, i32 %25, !dbg\l... !49\l  %27 = load i32, i32* %26, !dbg !50\l  store i32 %27, i32* %a, !dbg !51\l  %28 = load i32, i32* %j, !dbg !52\l  %29 = add i32 %28, 1, !dbg !52\l  %30 = getelementptr [512 x i32], [512 x i32]* %numbers, i32 0, i32 %29, !dbg\l... !52\l  %31 = load i32, i32* %30, !dbg !53\l  store i32 %31, i32* %b, !dbg !54\l  %32 = load i32, i32* %b, !dbg !55\l  %33 = load i32, i32* %a, !dbg !56\l  %34 = icmp slt i32 %32, %33, !dbg !55\l  br i1 %34, label %if.then, label %if.else, !dbg !55\l|{<s0>T|<s1>F}}"];
	Node0x560038a4f810:s0 -> Node0x560038a51d20;
	Node0x560038a4f810:s1 -> Node0x560038a51df0;
	Node0x560038a51f50 [shape=record,label="{for.inc9:                                         \l  %35 = load i32, i32* %j, !dbg !57\l  %36 = add i32 %35, 1, !dbg !57\l  store i32 %36, i32* %j, !dbg !45\l  br label %for.cond7, !dbg !45\l}"];
	Node0x560038a51f50 -> Node0x560038a4e160;
	Node0x560038a4f8f0 [shape=record,label="{for.end10:                                        \l  br label %while.cond, !dbg !45\l}"];
	Node0x560038a4f8f0 -> Node0x560038a4cb90;
	Node0x560038a51d20 [shape=record,label="{if.then:                                          \l  %37 = load i32, i32* %switches, !dbg !58\l  %38 = add i32 %37, 1, !dbg !58\l  store i32 %38, i32* %switches, !dbg !59\l  %39 = load i32, i32* %j, !dbg !60\l  %40 = getelementptr [512 x i32], [512 x i32]* %numbers, i32 0, i32 %39, !dbg\l... !60\l  %41 = load i32, i32* %b, !dbg !61\l  store i32 %41, i32* %40, !dbg !62\l  %42 = load i32, i32* %j, !dbg !63\l  %43 = add i32 %42, 1, !dbg !63\l  %44 = getelementptr [512 x i32], [512 x i32]* %numbers, i32 0, i32 %43, !dbg\l... !63\l  %45 = load i32, i32* %a, !dbg !64\l  store i32 %45, i32* %44, !dbg !65\l  br label %if.end, !dbg !65\l}"];
	Node0x560038a51d20 -> Node0x560038a54fa0;
	Node0x560038a51df0 [shape=record,label="{if.else:                                          \l  br label %if.end, !dbg !65\l}"];
	Node0x560038a51df0 -> Node0x560038a54fa0;
	Node0x560038a54fa0 [shape=record,label="{if.end:                                           \l  br label %for.inc9, !dbg !65\l}"];
	Node0x560038a54fa0 -> Node0x560038a51f50;
	Node0x560038a47b30 [shape=record,label="{for.init11:                                       \l  store i32 0, i32* %j, !dbg !66\l  br label %for.cond12, !dbg !66\l}"];
	Node0x560038a47b30 -> Node0x560038a55890;
	Node0x560038a55890 [shape=record,label="{for.cond12:                                       \l  %46 = load i32, i32* %j, !dbg !67\l  %47 = load i32, i32* %n, !dbg !68\l  %48 = sub i32 %47, 1, !dbg !68\l  %49 = icmp slt i32 %46, %48, !dbg !67\l  br i1 %49, label %for.body13, label %for.end15, !dbg !67\l|{<s0>T|<s1>F}}"];
	Node0x560038a55890:s0 -> Node0x560038a56f40;
	Node0x560038a55890:s1 -> Node0x560038a57020;
	Node0x560038a56f40 [shape=record,label="{for.body13:                                       \l  %50 = load i32, i32* %j, !dbg !69\l  %51 = getelementptr [512 x i32], [512 x i32]* %numbers, i32 0, i32 %50, !dbg\l... !69\l  %52 = load i32, i32* %51, !dbg !70\l  %53 = load i32, i32* %j, !dbg !71\l  %54 = add i32 %53, 1, !dbg !71\l  %55 = getelementptr [512 x i32], [512 x i32]* %numbers, i32 0, i32 %54, !dbg\l... !71\l  %56 = load i32, i32* %55, !dbg !72\l  %57 = icmp sgt i32 %52, %56, !dbg !70\l  br i1 %57, label %if.then16, label %if.else17, !dbg !70\l|{<s0>T|<s1>F}}"];
	Node0x560038a56f40:s0 -> Node0x560038a593d0;
	Node0x560038a56f40:s1 -> Node0x560038a594b0;
	Node0x560038a59620 [shape=record,label="{for.inc14:                                        \l  %58 = load i32, i32* %j, !dbg !73\l  %59 = add i32 %58, 1, !dbg !73\l  store i32 %59, i32* %j, !dbg !74\l  br label %for.cond12, !dbg !74\l}"];
	Node0x560038a59620 -> Node0x560038a55890;
	Node0x560038a57020 [shape=record,label="{for.end15:                                        \l  %60 = load i32, i32* %sorted, !dbg !75\l  call void @echo(i32 %60), !dbg !75\l  ret i32 0\l}"];
	Node0x560038a593d0 [shape=record,label="{if.then16:                                        \l  store i32 0, i32* %sorted, !dbg !76\l  br label %if.end18, !dbg !76\l}"];
	Node0x560038a593d0 -> Node0x560038a5b0f0;
	Node0x560038a594b0 [shape=record,label="{if.else17:                                        \l  br label %if.end18, !dbg !76\l}"];
	Node0x560038a594b0 -> Node0x560038a5b0f0;
	Node0x560038a5b0f0 [shape=record,label="{if.end18:                                         \l  br label %for.inc14, !dbg !76\l}"];
	Node0x560038a5b0f0 -> Node0x560038a59620;
}
