<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="generator" content="intranetr/0.10.0">
<title>OEFENINGEN: Knut-Morris-Pratt | iii intranet</title>
<!--[if lt IE 8]>
<link rel="stylesheet" type="text/css" href="/css/ie.css">
<![endif]-->
</head>

<body>
<p>Implementeer Knuth-Morris-Pratt. Bij deze methode moet er veel
werk verzet worden voor het eigenlijke zoeken kan beginnen. Vandaar
dat dit gebeurt in de constructor. Dit is efficiÃ«nt als je dezelfde
naald verschillende keren moet zoeken. De hoofding vind je in
<a href="opgave_files/knuthmorrispratt.h">knuthmorrispratt.h</a>. Je ziet dat de
zoekoperatie een <tt>queue</tt> teruggeeft met plaatsen: je
gebruikt de methode meestal om alle plaatsen waar de naald voorkomt
op te zoeken. Meestal worden die plaatsen daarna in volgorde
verwerkt. Dus gebruik je een <tt>Queue</tt> en geen gewone
<tt>Lijst</tt>.</p>
<p>Als je een karakterstring meegeeft moet je ook de lengte
opgeven. Op deze manier is het nulkarakter geen speciaal karakter
meer. Je kan dus rustig een string als ``a\000bc'' opgeven (`\000'
is het nulkarakter).</p>
<p>De code werkt met klassieke arrays van bytes. Dit maakt ze
flexibel inzetbaar: je kan ermee zoeken zowel in C++-strings als in
klassieke C-strings; merk op dat je de data in een C++string kan
bekijken met de c_str()-lidfunctie, al moet je het resultaat dan
wel casten naar uchar*.</p>
<p>Schrijf een programma dat een string vraagt aan de gebruiker, en
dat weergeeft hoe vaak ze in <a href="opgave_files/Shakespeare.txt">het
verzameld werk van Shakespeare</a> voorkomt.</p>
<p>We gebruiken <tt>unsigned char</tt> en niet <tt>char</tt>. Maakt
dit eigenlijk een verschil bij KMP?</p>
<p>Je code moet uiteraard <em>getest</em> worden. Je vindt een paar
voorbeeldgevallen in <a href="opgave_files/testset.xml">testset.xml</a>.
Daarvoor moet je natuurlijk je code aanpassen zodat je ook weet
hoeveel karaktervergelijkingen je code nodig heeft.</p>
<p>Bijkomende opdracht: vergelijk het aantal karaktervergelijkingen
dat KMP nodig heeft om een string bij Shakespeare te vinden met het
aantal bij de primitieve methode.</p>

</div>
</div>
</div>





<div id="popout"><div id="popout-panel"><div id="popout-grow" class="popout-button"></div><div id="popout-shrink" class="popout-button"></div><div id="popout-close" class="popout-button"></div><div id="popout-contents"></div></div></div><img src="opgave_files/throbber.gif" style="position: absolute; left: 50%; top: 50%;margin: -15px 0 0 -15px; z-index: 100; display: none;"></body></html>
<!-- 24 ms / 522 KB -->